$version Generated by VerilatedVcd $end
$timescale 1ns $end
 $scope module TOP $end
  $scope module $unit $end
   $var wire 32 < ZERO [31:0] $end
   $var wire 21 & jtype_insn__Vstatic__imm_jtype [20:0] $end
   $scope module check_control_signal__Vstatic__unnamedblk1 $end
    $var wire 32 ' test_fail [31:0] $end
   $upscope $end
  $upscope $end
  $scope module top_tb $end
   $var wire 1 4 clk $end
   $var wire 1 9 rst $end
   $var wire 32 : DWIDTH [31:0] $end
   $var wire 32 : AWIDTH [31:0] $end
   $var wire 7 5 opcode [6:0] $end
   $var wire 32 # insn [31:0] $end
   $var wire 32 ( imm [31:0] $end
   $var wire 7 ) funct7 [6:0] $end
   $var wire 3 $ funct3 [2:0] $end
   $var wire 5 6 rd [4:0] $end
   $var wire 5 7 rs1 [4:0] $end
   $var wire 5 8 rs2 [4:0] $end
   $var wire 1 * pcsel $end
   $var wire 1 + immsel $end
   $var wire 1 , regwren $end
   $var wire 1 - rs1sel $end
   $var wire 1 . rs2sel $end
   $var wire 1 / memren $end
   $var wire 1 0 memwren $end
   $var wire 2 1 wbsel [1:0] $end
   $var wire 4 2 alusel [3:0] $end
   $var wire 32 % pc [31:0] $end
   $var wire 7 3 actual_signal [6:0] $end
   $scope module dut_control $end
    $var wire 32 : DWIDTH [31:0] $end
    $var wire 32 # insn_i [31:0] $end
    $var wire 7 5 opcode_i [6:0] $end
    $var wire 7 ) funct7_i [6:0] $end
    $var wire 3 $ funct3_i [2:0] $end
    $var wire 1 * pcsel_o $end
    $var wire 1 + immsel_o $end
    $var wire 1 , regwren_o $end
    $var wire 1 - rs1sel_o $end
    $var wire 1 . rs2sel_o $end
    $var wire 1 / memren_o $end
    $var wire 1 0 memwren_o $end
    $var wire 2 1 wbsel_o [1:0] $end
    $var wire 4 2 alusel_o [3:0] $end
   $upscope $end
   $scope module dut_decode $end
    $var wire 32 : DWIDTH [31:0] $end
    $var wire 32 : AWIDTH [31:0] $end
    $var wire 1 4 clk $end
    $var wire 1 9 rst $end
    $var wire 32 # insn_i [31:0] $end
    $var wire 32 % pc_i [31:0] $end
    $var wire 32 % pc_o [31:0] $end
    $var wire 32 # insn_o [31:0] $end
    $var wire 7 5 opcode_o [6:0] $end
    $var wire 5 6 rd_o [4:0] $end
    $var wire 5 7 rs1_o [4:0] $end
    $var wire 5 8 rs2_o [4:0] $end
    $var wire 7 ) funct7_o [6:0] $end
    $var wire 3 $ funct3_o [2:0] $end
    $var wire 5 ; shamt_o [4:0] $end
    $var wire 32 ( imm_o [31:0] $end
   $upscope $end
   $scope module dut_igen $end
    $var wire 32 : DWIDTH [31:0] $end
    $var wire 7 5 opcode_i [6:0] $end
    $var wire 32 # insn_i [31:0] $end
    $var wire 32 ( imm_o [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000011100110000001010110011 #
b000 $
b00000000000000000000000000000000 %
b000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b0000000 )
0*
0+
1,
1-
1.
0/
00
b00 1
b0000 2
b0011100 3
04
b0110011 5
b00101 6
b00110 7
b00111 8
09
b00000000000000000000000000100000 :
b00000 ;
b00000000000000000000000000000000 <
#19
